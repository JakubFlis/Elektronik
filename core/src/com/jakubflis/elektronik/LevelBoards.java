package com.jakubflis.elektronik;

import java.util.*;

/**
 * Klasa definiuje i przechowuje wszystkie plansze gry, zdefiniowane za
 * pomocą kodów liczbowych. Interpretację kodów liczbowych przeprowadza
 * klasa BoardPointHelper.
 *
 * @see BoardPointHelper
 *
 * Klasa ta również zawiera tablicę posiadającą czasy, w jakich
 * gracz powinien zdążyć ukończyć poziom.
 *
 * @author  Jakub Flis
 * @version 1.0
 */
public class LevelBoards {
    public static float[] levelDuration = new float[] { 60.0f, 30.0f };

    private static int[][] _level1 = new int[][] {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 13, 1, 1, 1, 1, 4, 0, 0, 0, 0, 0 },
            { 0, 12, 1, 1, 1, 1, 2, 10, 10, 3, 1, 13, 5, 13, 1, 1, 13, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 6, 1, 1, 5, 0, 13, 1, 1, 4, 0, 0, 0, 0, 15, 10, 16, 6, 1, 12, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 13, 4, 14, 0, 0, 0, 0, 0, 18, 0, 14, 0, 0, 0 },
            { 0, 12, 1, 1, 1, 4, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 14, 7, 13, 1, 1, 4, 0, 14, 0, 14, 0, 12, 0 },
            { 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 14, 0, 14, 0, 14, 0, 14, 0 },
            { 0, 0, 0, 0, 0, 7, 13, 1, 13, 0, 13, 0, 8, 8, 0, 0, 0, 14, 0, 0, 0, 0, 13, 0, 13, 0, 13, 0, 14, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 19, 19, 0, 0, 0, 14, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 14, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 7, 1, 1, 2, 10, 10, 3, 1, 1, 11, 1, 2, 10, 3, 1, 1, 1, 1, 1, 1, 5, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 19, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    };

    private static int[][] _level2 = new int[][] {
            { 0, 0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0 },
            { 0, 0,	0,	0,	0,	0,	0,	12,	0,	6,	1,	1,	1,	4,	0,	0,	0,	0,	0,	0 },
            { 0, 0,	0,	8,	0,	0,	0,	14,	0,	14,	0,	0,	0,	14,	0,	0,	0,	0,	0,	0 },
            { 0, 0,	0,	19,	0,	0,	0,	14,	0,	14,	0,	12,	0,	13,	1,	1,	1,	1,	4,	0 },
            { 0, 13,	2,	10,	3,	13,	1,	5,	0,	14,	0,	14,	0,	0,	0,	0,	0,	0,	14,	0},
            { 0, 0,	0,	0,	0,	0,	0,	0,	0,	14,	0,	7,	1,	13,	1,	4,	0,	0,	17,	0 },
            { 0, 13,	1,	1,	1,	13,	0,	0,	0,	13,	0,	0,	0,	0,	0,	14,	0,	15,	10,	16 },
            { 0, 14,	0,	0,	0,	0,	0,	0,	0,	0,	0,	6,	1,	13,	0,	14,	0,	15,	10,	16 },
            { 0, 14,	0,	0,	0,	13,	4,	0,	0,	0,	0,	17,	0,	0,	0,	14,	0,	0,	18,	0 },
            { 0, 14,	0,	0,	0,	0,	14,	0,	0,	0,	15,	10,	0,	6,	1,	5,	0,	0,	14,	0 },
            { 0, 14,	0,	0,	6,	1,	11,	1,	12,	0,	0,	18,	0,	14,	0,	0,	0,	0,	14,	0 },
            { 0, 12,	0,	0,	14, 0,	0,	0,	0,	0,	0,	14,	0,	12,	0,	0,	0,	0,	14,	0 },
            { 0,	0,	0,	0,	7,	1,	1,	1,	1,	1,	1,	5,	0,	0,	0,	0,	0,	0,	12,	0},
            { 0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0}
    };

    /**
     * Zwraca listę poziomów zdefiniowanych wewnątrz tej klasy.
     *
     *
     * @return kompletna lista poziomów
     */
    public static List<int[][]> getLevelArrays() {
        List<int[][]> levelArrays = new ArrayList<int[][]>();
        levelArrays.add(_level1);
        levelArrays.add(_level2);

        return levelArrays;
    }
}
